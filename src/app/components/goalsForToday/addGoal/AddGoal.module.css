.addGoal {
  max-height: 52px;
  transition: max-height 0.4s ease-in-out, transform 0.3s ease;
  border-radius: 8px;
  background-color: var(--surface);
  color: var(--text-primary);
  margin-bottom: 14px;
  box-shadow: var(--shadow-sm);
  overflow: visible;
  position: relative;
}

.addGoal.expanded {
  max-height: 700px;
  overflow: visible;
}

.addGoal:not(.expanded) .addGoalHeader:hover {
  background-color: var(--surface-hover);
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

.addGoal:not(.expanded) .addGoalHeader:hover .addBtn {
  background-color: var(--accent);
  color: var(--text-primary);
}

.addGoalHeader {
  height: 52px;
  border-radius: 8px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 12px;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.3s ease,
    box-shadow 0.3s ease;
}

.addGoal.expanded .addGoalHeader {
  border-radius: 8px 8px 0 0;
  cursor: default;
}

.collapsedHeader,
.expandedHeader {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.addGoalTitle {
  font-size: 1rem;
  font-weight: 500;
  color: var(--text-primary);
}

.addGoalInput {
  background-color: transparent;
  color: var(--text-primary);
  width: 75%;
  font-size: 1.1rem;
  border: none;
  border-bottom: 1px solid var(--surface-hover);
  padding: 4px 0;
  outline: none;
  transition: border-bottom 0.3s ease;
}

.addGoalInput::placeholder {
  color: var(--text-muted);
}

.addBtn {
  height: 32px;
  width: 32px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.1rem;
  background-color: var(--accent);
  color: var(--text-primary);
  border: none;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.addBtn:hover {
  background-color: var(--accent-hover);
  transform: scale(1.05);
}

.customBtn {
  height: 32px;
  width: 32px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  border: none;
  position: relative;
  overflow: hidden;
  transition: transform 0.2s ease;
}

.customBtn:hover {
  transform: scale(1.05);
}

.coverOverlay {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--overlay);
  color: var(--text-primary);
  font-size: 1.1rem;
  border-radius: 8px;
  transition: background-color 0.3s ease;
}

/* Reward badge */
.rewardBadge {
  height: 26px;
  min-width: 46px;
  padding: 0 10px;
  border-radius: 13px;
  background-color: var(--background);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-primary);
  font-weight: 500;
  transition: transform 0.2s ease;
}

.rewardBadge:hover {
  transform: scale(1.05);
}

.gemIcon {
  width: 12px;
  height: 12px;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  margin-left: 3px;
}

.addGoalContent {
  padding: 14px;
  background-color: var(--background);
  border-radius: 0 0 8px 8px;
  overflow: visible;
}

.dateAndCurrency {
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;
  position: relative;
  overflow: visible;
}

.repeatSelector,
.prioritySelector,
.currencySelector {
  background-color: var(--surface);
}

.repeatSelector:hover,
.prioritySelector:hover,
.currencySelector:hover {
  background-color: var(--surface-hover);
}

.customRewardSelector:hover,
.dateSelector:hover {
  background-color: var(--surface-hover);
}

.customRewardSelector,
.dateSelector {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 4px 12px;
  background-color: var(--surface);
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s;
  color: var(--text-primary);
  width: 100%;
  white-space: nowrap;
  overflow: visible;
  text-overflow: ellipsis;
}

.chevron {
  font-size: 1.2rem;
  color: var(--text-muted);
  transition: transform 0.2s ease;
  display: flex;
  align-items: center;
}

.chevron.rotated {
  transform: rotate(180deg);
}

.customSelect {
  position: relative;
  font-size: 14px;
  user-select: none;
  color: var(--text-primary);
  flex: 1;
  min-width: 0;
  overflow: visible;
}

.toggleButton.active {
  background-color: var(--surface-hover);
  font-weight: 500;
}

.plusIcon {
  margin-right: 6px;
}

.customRewardSection {
  margin: 12px 0;
}

.customRewardInput {
  width: 100%;
  padding: 10px;
  border: none;
  border-radius: 4px;
  background-color: var(--background);
  color: var(--text-primary);
  font-size: 0.9rem;
  outline: none;
  transition: background-color 0.3s ease;
}

.customRewardInput:focus {
  background-color: var(--surface-hover);
}

.customRewardInput::placeholder {
  color: var(--text-muted);
}

.calendarWrapper {
  position: absolute;
  top: 30px;
  left: 0;
  width: 280px;
  padding: 8px;
  background-color: var(--surface);
  border-radius: 6px;
  box-shadow: var(--shadow-md);
  z-index: 1000;
}

.actionButtons {
  display: flex;
  justify-content: flex-end;
  gap: 8px;
  margin-top: 12px;
}

.boxShadow {
  box-shadow: var(--shadow-sm);
}

/* Updated Subtasks Section */
.subtasksSection {
  margin-top: 12px;
  border-radius: 6px;
  border: 1px solid var(--surface-hover);
  overflow: hidden;
}

.subtaskToggle {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 12px;
  background-color: var(--surface);
  cursor: pointer;
  transition: background-color 0.2s ease;
  font-size: 0.9rem;
  font-weight: 500;
  color: var(--text-primary);
}

.subtaskToggle:hover {
  background-color: var(--surface-hover);
}

.subtasksHeader {
  padding: 12px;
  background-color: var(--background);
  border-top: 1px solid var(--surface-hover);
}

.subtaskInput {
  display: flex;
  gap: 8px;
  align-items: center;
}

.subtaskInput input {
  flex-grow: 1;
  padding: 8px 12px;
  border: none;
  border-radius: 4px;
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: 0.9rem;
  outline: none;
  transition: background-color 0.3s ease;
}

.subtaskInput input:focus {
  background-color: var(--surface-hover);
}

.subtaskInput input::placeholder {
  color: var(--text-muted);
}

.subtaskAddBtn {
  height: 32px;
  width: 32px;
  border: none;
  border-radius: 4px;
  background-color: var(--surface-hover);
  color: var(--text-muted);
  font-size: 1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.subtaskAddBtn:hover {
  background-color: var(--accent);
  color: var(--text-primary);
  transform: scale(1.05);
}

.subtasksList {
  display: flex;
  flex-direction: column;
  background-color: var(--background);
  max-height: 180px;
  overflow-y: auto;
}

.subtasksList::-webkit-scrollbar {
  width: 6px;
}

.subtasksList::-webkit-scrollbar-track {
  background: var(--surface);
  border-radius: 3px;
}

.subtasksList::-webkit-scrollbar-thumb {
  background: var(--accent);
  border-radius: 3px;
}

.subtasksList::-webkit-scrollbar-thumb:hover {
  background: var(--accent-hover);
}

.subtaskItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 12px;
  border-top: 1px solid var(--surface-hover);
  transition: background-color 0.3s ease;
}

.subtaskItem:hover {
  background-color: var(--surface);
}

.subtaskLeft {
  display: flex;
  align-items: center;
  gap: 10px;
  flex: 1;
}

.subtaskLeft input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 16px;
  height: 16px;
  border-radius: 3px;
  background-color: var(--surface);
  border: 1px solid var(--text-muted);
  cursor: pointer;
  position: relative;
  transition: all 0.2s ease;
}

.subtaskLeft input[type="checkbox"]:checked {
  background-color: var(--accent);
  border-color: var(--accent);
}

.subtaskLeft input[type="checkbox"]:checked:after {
  content: "âœ“";
  color: var(--text-primary);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 0.75rem;
}

.subtaskLeft span {
  font-size: 0.9rem;
  color: var(--text-primary);
  transition: opacity 0.3s ease, text-decoration 0.3s ease;
}

/* Style for completed subtasks */
.subtaskLeft span.completed {
  text-decoration: line-through;
  opacity: 0.6;
  color: var(--text-muted);
}

.deleteSubtaskBtn {
  background: none;
  border: none;
  color: var(--text-muted);
  cursor: pointer;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 6px;
  border-radius: 4px;
  transition: all 0.2s ease;
  opacity: 0.7;
}

.deleteSubtaskBtn:hover {
  color: #ff6b6b;
  background-color: var(--surface-hover);
  opacity: 1;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .subtaskToggle {
    padding: 8px 10px;
    font-size: 0.85rem;
  }

  .subtaskInput {
    gap: 6px;
  }

  .subtaskInput input {
    padding: 6px 10px;
    font-size: 0.85rem;
  }

  .subtaskAddBtn {
    height: 28px;
    width: 28px;
    font-size: 0.9rem;
  }
}

.difficultyOption {
  display: flex;
  align-items: center;
}

.difficultyOption span {
  font-size: 1.1rem;
  font-weight: 500;
}

/* Make sure the CustomSelect component takes full width */
.customSelect :global(.customSelect) {
  width: 100%;
}

/* Make sure the select header takes full width */
.customSelect :global(.selectHeader) {
  width: 100%;
}

/* Make sure the selected option takes full width */
.customSelect :global(.selectedOption) {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.difficultySelect {
  height: 40px;
  border-radius: 40px;
  width: 90px !important;
  display: flex;
  flex: none !important;
  align-items: center;
  justify-content: center;
  font-size: 1.2rem;
  background-color: var(--background);
  color: var(--text-primary);
  transition: all 0.2s ease;
  position: relative;
  z-index: 2;
}

.difficultySelect:hover {
  transform: scale(1.05);
}

.difficultyDisplay {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
  width: 100%;
  height: 100%;
}

.difficultyDisplay span {
  font-size: 1.2rem;
  font-weight: 500;
}

.difficultyDisplay .gemIcon {
  width: 15px;
  height: 15px;
  background-size: contain;
  background-repeat: no-repeat;
}

/* Add z-index to the options container */
.customSelect :global(.options) {
  z-index: 3;
  position: relative;
}

/* Ensure the custom reward button has a lower z-index */
.customRewardSelector {
  position: relative;
  z-index: 1;
}
.subtaskToggleContent {
  display: flex;
  align-items: center;
  gap: 8px;
  color: var(--text-muted);
}

.completedBadge {
  color: var(--accent);
  font-weight: bold;
  margin-left: 4px;
}
